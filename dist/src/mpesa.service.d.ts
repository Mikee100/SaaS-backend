import { PrismaService } from './prisma.service';
export interface MpesaTransactionData {
    userId?: string;
    phoneNumber: string;
    amount: number;
    status?: 'pending' | 'success' | 'failed' | 'cancelled' | 'timeout' | 'stock_unavailable';
    merchantRequestId?: string;
    checkoutRequestID?: string;
    message?: string;
    saleData?: any;
    transactionType?: string;
    businessShortCode?: string;
    billRefNumber?: string;
    invoiceNumber?: string;
    tenantId: string;
    transactionId?: string;
    orgAccountBalance?: string;
    thirdPartyTransID?: string;
    responseCode?: string;
    responseDesc?: string;
    mpesaReceipt?: string;
    saleId?: string;
    transactionTime?: Date;
}
export interface MpesaTransactionUpdate extends Partial<MpesaTransactionData> {
    status?: 'pending' | 'success' | 'failed' | 'cancelled' | 'timeout' | 'stock_unavailable';
    mpesaReceipt?: string;
    responseCode?: string;
    responseDesc?: string;
    message?: string;
    saleId?: string;
    transactionTime?: Date;
    orgAccountBalance?: string;
    thirdPartyTransID?: string;
}
export declare class MpesaService {
    private readonly prisma;
    private readonly logger;
    constructor(prisma: PrismaService);
    createTransaction(data: MpesaTransactionData): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        tenantId: string;
        userId: string | null;
        phoneNumber: string;
        amount: number;
        status: string;
        merchantRequestId: string | null;
        checkoutRequestID: string | null;
        mpesaReceipt: string | null;
        responseCode: string | null;
        responseDesc: string | null;
        message: string | null;
        saleId: string | null;
        saleData: import("@prisma/client/runtime/library").JsonValue | null;
        transactionId: string | null;
        transactionType: string | null;
        transactionTime: Date | null;
        businessShortCode: string | null;
        billRefNumber: string | null;
        invoiceNumber: string | null;
        orgAccountBalance: string | null;
        thirdPartyTransID: string | null;
    }>;
    updateTransaction(id: string, data: MpesaTransactionUpdate): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        tenantId: string;
        userId: string | null;
        phoneNumber: string;
        amount: number;
        status: string;
        merchantRequestId: string | null;
        checkoutRequestID: string | null;
        mpesaReceipt: string | null;
        responseCode: string | null;
        responseDesc: string | null;
        message: string | null;
        saleId: string | null;
        saleData: import("@prisma/client/runtime/library").JsonValue | null;
        transactionId: string | null;
        transactionType: string | null;
        transactionTime: Date | null;
        businessShortCode: string | null;
        billRefNumber: string | null;
        invoiceNumber: string | null;
        orgAccountBalance: string | null;
        thirdPartyTransID: string | null;
    }>;
    getTransactionById(id: string): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        tenantId: string;
        userId: string | null;
        phoneNumber: string;
        amount: number;
        status: string;
        merchantRequestId: string | null;
        checkoutRequestID: string | null;
        mpesaReceipt: string | null;
        responseCode: string | null;
        responseDesc: string | null;
        message: string | null;
        saleId: string | null;
        saleData: import("@prisma/client/runtime/library").JsonValue | null;
        transactionId: string | null;
        transactionType: string | null;
        transactionTime: Date | null;
        businessShortCode: string | null;
        billRefNumber: string | null;
        invoiceNumber: string | null;
        orgAccountBalance: string | null;
        thirdPartyTransID: string | null;
    }>;
    getTransactionByCheckoutId(checkoutRequestID: string): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        tenantId: string;
        userId: string | null;
        phoneNumber: string;
        amount: number;
        status: string;
        merchantRequestId: string | null;
        checkoutRequestID: string | null;
        mpesaReceipt: string | null;
        responseCode: string | null;
        responseDesc: string | null;
        message: string | null;
        saleId: string | null;
        saleData: import("@prisma/client/runtime/library").JsonValue | null;
        transactionId: string | null;
        transactionType: string | null;
        transactionTime: Date | null;
        businessShortCode: string | null;
        billRefNumber: string | null;
        invoiceNumber: string | null;
        orgAccountBalance: string | null;
        thirdPartyTransID: string | null;
    }>;
    getTransactionsByUserId(userId: string, limit?: number): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        tenantId: string;
        userId: string | null;
        phoneNumber: string;
        amount: number;
        status: string;
        merchantRequestId: string | null;
        checkoutRequestID: string | null;
        mpesaReceipt: string | null;
        responseCode: string | null;
        responseDesc: string | null;
        message: string | null;
        saleId: string | null;
        saleData: import("@prisma/client/runtime/library").JsonValue | null;
        transactionId: string | null;
        transactionType: string | null;
        transactionTime: Date | null;
        businessShortCode: string | null;
        billRefNumber: string | null;
        invoiceNumber: string | null;
        orgAccountBalance: string | null;
        thirdPartyTransID: string | null;
    }[]>;
    getTransactionsByTenant(tenantId: string, limit?: number): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        tenantId: string;
        userId: string | null;
        phoneNumber: string;
        amount: number;
        status: string;
        merchantRequestId: string | null;
        checkoutRequestID: string | null;
        mpesaReceipt: string | null;
        responseCode: string | null;
        responseDesc: string | null;
        message: string | null;
        saleId: string | null;
        saleData: import("@prisma/client/runtime/library").JsonValue | null;
        transactionId: string | null;
        transactionType: string | null;
        transactionTime: Date | null;
        businessShortCode: string | null;
        billRefNumber: string | null;
        invoiceNumber: string | null;
        orgAccountBalance: string | null;
        thirdPartyTransID: string | null;
    }[]>;
    getPendingTransactions(limit?: number): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        tenantId: string;
        userId: string | null;
        phoneNumber: string;
        amount: number;
        status: string;
        merchantRequestId: string | null;
        checkoutRequestID: string | null;
        mpesaReceipt: string | null;
        responseCode: string | null;
        responseDesc: string | null;
        message: string | null;
        saleId: string | null;
        saleData: import("@prisma/client/runtime/library").JsonValue | null;
        transactionId: string | null;
        transactionType: string | null;
        transactionTime: Date | null;
        businessShortCode: string | null;
        billRefNumber: string | null;
        invoiceNumber: string | null;
        orgAccountBalance: string | null;
        thirdPartyTransID: string | null;
    }[]>;
    cancelTransaction(checkoutRequestID: string): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        tenantId: string;
        userId: string | null;
        phoneNumber: string;
        amount: number;
        status: string;
        merchantRequestId: string | null;
        checkoutRequestID: string | null;
        mpesaReceipt: string | null;
        responseCode: string | null;
        responseDesc: string | null;
        message: string | null;
        saleId: string | null;
        saleData: import("@prisma/client/runtime/library").JsonValue | null;
        transactionId: string | null;
        transactionType: string | null;
        transactionTime: Date | null;
        businessShortCode: string | null;
        billRefNumber: string | null;
        invoiceNumber: string | null;
        orgAccountBalance: string | null;
        thirdPartyTransID: string | null;
    }>;
    getTransactionStats(tenantId?: string): Promise<{
        total: number;
        pending: number;
        completed: number;
        failed: number;
        totalAmount: number;
    }>;
}
