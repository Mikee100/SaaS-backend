import { PrismaService } from '../prisma.service';
export declare class TenantService {
    private prisma;
    constructor(prisma: PrismaService);
    createTenant(data: {
        name: string;
        businessType: string;
        contactEmail: string;
        contactPhone?: string;
    }): Promise<any>;
    getAllTenants(): Promise<any[]>;
    getTenantById(tenantId: string): Promise<{
        id: string;
        name: string;
        currency: string | null;
        whiteLabel: boolean;
        ssoEnabled: boolean;
        auditLogs: boolean;
        backupRestore: boolean;
        customIntegrations: boolean;
        createdAt: Date;
        updatedAt: Date;
        businessType: string;
        contactEmail: string;
        contactPhone: string | null;
        businessCategory: string | null;
        businessSubcategory: string | null;
        primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        businessDescription: string | null;
        address: string | null;
        city: string | null;
        state: string | null;
        country: string | null;
        postalCode: string | null;
        latitude: number | null;
        longitude: number | null;
        foundedYear: number | null;
        employeeCount: string | null;
        annualRevenue: string | null;
        businessHours: import("@prisma/client/runtime/library").JsonValue | null;
        website: string | null;
        socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
        kraPin: string | null;
        vatNumber: string | null;
        etimsQrUrl: string | null;
        businessLicense: string | null;
        taxId: string | null;
        timezone: string | null;
        invoiceFooter: string | null;
        logoUrl: string | null;
        favicon: string | null;
        receiptLogo: string | null;
        watermark: string | null;
        primaryColor: string | null;
        secondaryColor: string | null;
        customDomain: string | null;
        apiKey: string | null;
        webhookUrl: string | null;
        rateLimit: number | null;
        stripeCustomerId: string | null;
    } | null>;
    updateTenant(tenantId: string, dto: any): Promise<{
        id: string;
        name: string;
        currency: string | null;
        whiteLabel: boolean;
        ssoEnabled: boolean;
        auditLogs: boolean;
        backupRestore: boolean;
        customIntegrations: boolean;
        createdAt: Date;
        updatedAt: Date;
        businessType: string;
        contactEmail: string;
        contactPhone: string | null;
        businessCategory: string | null;
        businessSubcategory: string | null;
        primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        businessDescription: string | null;
        address: string | null;
        city: string | null;
        state: string | null;
        country: string | null;
        postalCode: string | null;
        latitude: number | null;
        longitude: number | null;
        foundedYear: number | null;
        employeeCount: string | null;
        annualRevenue: string | null;
        businessHours: import("@prisma/client/runtime/library").JsonValue | null;
        website: string | null;
        socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
        kraPin: string | null;
        vatNumber: string | null;
        etimsQrUrl: string | null;
        businessLicense: string | null;
        taxId: string | null;
        timezone: string | null;
        invoiceFooter: string | null;
        logoUrl: string | null;
        favicon: string | null;
        receiptLogo: string | null;
        watermark: string | null;
        primaryColor: string | null;
        secondaryColor: string | null;
        customDomain: string | null;
        apiKey: string | null;
        webhookUrl: string | null;
        rateLimit: number | null;
        stripeCustomerId: string | null;
    }>;
}
