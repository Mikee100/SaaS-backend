import { PrismaService } from '../prisma.service';
import { UserService } from '../user/user.service';
import { BranchService } from '../branch/branch.service';
export declare class TenantService {
    private prisma;
    private userService;
    private branchService;
    private readonly logger;
    constructor(prisma: PrismaService, userService: UserService, branchService: BranchService);
    createTenant(data: any): Promise<any>;
    getAllTenants(): Promise<any[]>;
    getTenantById(tenantId: string): Promise<{
        id: string;
        name: string;
        createdAt: Date;
        updatedAt: Date;
        businessType: string;
        contactEmail: string;
        contactPhone: string | null;
        address: string | null;
        currency: string | null;
        logoUrl: string | null;
        timezone: string | null;
        vatNumber: string | null;
        city: string | null;
        country: string | null;
        taxId: string | null;
        website: string | null;
        annualRevenue: string | null;
        apiKey: string | null;
        backupRestore: boolean;
        businessCategory: string | null;
        businessDescription: string | null;
        businessHours: import("@prisma/client/runtime/library").JsonValue | null;
        businessLicense: string | null;
        businessSubcategory: string | null;
        customDomain: string | null;
        customIntegrations: boolean;
        employeeCount: string | null;
        etimsQrUrl: string | null;
        favicon: string | null;
        foundedYear: number | null;
        invoiceFooter: string | null;
        kraPin: string | null;
        latitude: number | null;
        longitude: number | null;
        postalCode: string | null;
        primaryColor: string | null;
        primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        rateLimit: number | null;
        receiptLogo: string | null;
        secondaryColor: string | null;
        secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
        ssoEnabled: boolean;
        state: string | null;
        stripeCustomerId: string | null;
        watermark: string | null;
        webhookUrl: string | null;
        whiteLabel: boolean;
        dashboardLogoUrl: string | null;
        emailLogoUrl: string | null;
        loginLogoUrl: string | null;
        logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
        mobileLogoUrl: string | null;
        auditLogsEnabled: boolean;
        credits: number | null;
    } | null>;
    getTenant(tenantId: string): Promise<{
        id: string;
        name: string;
        createdAt: Date;
        updatedAt: Date;
        businessType: string;
        contactEmail: string;
        contactPhone: string | null;
        address: string | null;
        currency: string | null;
        logoUrl: string | null;
        timezone: string | null;
        vatNumber: string | null;
        city: string | null;
        country: string | null;
        taxId: string | null;
        website: string | null;
        annualRevenue: string | null;
        apiKey: string | null;
        backupRestore: boolean;
        businessCategory: string | null;
        businessDescription: string | null;
        businessHours: import("@prisma/client/runtime/library").JsonValue | null;
        businessLicense: string | null;
        businessSubcategory: string | null;
        customDomain: string | null;
        customIntegrations: boolean;
        employeeCount: string | null;
        etimsQrUrl: string | null;
        favicon: string | null;
        foundedYear: number | null;
        invoiceFooter: string | null;
        kraPin: string | null;
        latitude: number | null;
        longitude: number | null;
        postalCode: string | null;
        primaryColor: string | null;
        primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        rateLimit: number | null;
        receiptLogo: string | null;
        secondaryColor: string | null;
        secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
        ssoEnabled: boolean;
        state: string | null;
        stripeCustomerId: string | null;
        watermark: string | null;
        webhookUrl: string | null;
        whiteLabel: boolean;
        dashboardLogoUrl: string | null;
        emailLogoUrl: string | null;
        loginLogoUrl: string | null;
        logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
        mobileLogoUrl: string | null;
        auditLogsEnabled: boolean;
        credits: number | null;
    } | null>;
    updateTenant(tenantId: string, dto: Partial<{
        name: string;
        businessType: string;
        contactEmail: string;
        contactPhone: string | null;
        businessCategory: string | null;
        businessSubcategory: string | null;
        primaryProducts: any;
        secondaryProducts: any;
        businessDescription: string | null;
        address: string | null;
        city: string | null;
        state: string | null;
        country: string | null;
        postalCode: string | null;
        latitude: number | null;
        longitude: number | null;
        foundedYear: number | null;
        employeeCount: string | null;
        annualRevenue: string | null;
        businessHours: any;
        website: string | null;
        socialMedia: any;
        kraPin: string | null;
        vatNumber: string | null;
        etimsQrUrl: string | null;
        businessLicense: string | null;
        taxId: string | null;
        currency: string | null;
        timezone: string | null;
        invoiceFooter: string | null;
        logoUrl: string | null;
        favicon: string | null;
        receiptLogo: string | null;
        watermark: string | null;
        primaryColor: string | null;
        secondaryColor: string | null;
        customDomain: string | null;
        whiteLabel: boolean | null;
        apiKey: string | null;
        webhookUrl: string | null;
        rateLimit: number | null;
        stripeCustomerId: string | null;
    }>): Promise<{
        id: string;
        name: string;
        createdAt: Date;
        updatedAt: Date;
        businessType: string;
        contactEmail: string;
        contactPhone: string | null;
        address: string | null;
        currency: string | null;
        logoUrl: string | null;
        timezone: string | null;
        vatNumber: string | null;
        city: string | null;
        country: string | null;
        taxId: string | null;
        website: string | null;
        annualRevenue: string | null;
        apiKey: string | null;
        backupRestore: boolean;
        businessCategory: string | null;
        businessDescription: string | null;
        businessHours: import("@prisma/client/runtime/library").JsonValue | null;
        businessLicense: string | null;
        businessSubcategory: string | null;
        customDomain: string | null;
        customIntegrations: boolean;
        employeeCount: string | null;
        etimsQrUrl: string | null;
        favicon: string | null;
        foundedYear: number | null;
        invoiceFooter: string | null;
        kraPin: string | null;
        latitude: number | null;
        longitude: number | null;
        postalCode: string | null;
        primaryColor: string | null;
        primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        rateLimit: number | null;
        receiptLogo: string | null;
        secondaryColor: string | null;
        secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
        ssoEnabled: boolean;
        state: string | null;
        stripeCustomerId: string | null;
        watermark: string | null;
        webhookUrl: string | null;
        whiteLabel: boolean;
        dashboardLogoUrl: string | null;
        emailLogoUrl: string | null;
        loginLogoUrl: string | null;
        logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
        mobileLogoUrl: string | null;
        auditLogsEnabled: boolean;
        credits: number | null;
    }>;
    createTenantWithOwner(tenantData: {
        name: string;
        businessType: string;
        contactEmail: string;
        contactPhone?: string;
        branchName?: string;
        owner: {
            name: string;
            email: string;
            password: string;
        };
        [key: string]: any;
    }): Promise<{
        tenant: any;
        branch: {
            id: string;
            name: string;
            createdAt: Date;
            tenantId: string;
            updatedAt: Date;
            email: string | null;
            address: string | null;
            city: string | null;
            country: string | null;
            postalCode: string | null;
            state: string | null;
            customField: string | null;
            isMainBranch: boolean;
            logo: string | null;
            manager: string | null;
            openingHours: string | null;
            phone: string | null;
            status: string | null;
            street: string | null;
        };
        user: {
            id: any;
            name: any;
            email: any;
        };
    }>;
    createOwnerUser(data: {
        name: string;
        email: string;
        password: string;
        tenantId: string;
        role?: string;
    }): Promise<any>;
}
