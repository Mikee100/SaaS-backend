import { PrismaService } from '../prisma.service';
import { UserService } from '../user/user.service';
export declare class TenantService {
    private prisma;
    private userService;
    private readonly logger;
    constructor(prisma: PrismaService, userService: UserService);
    createTenant(data: {
        name: string;
        businessType: string;
        contactEmail: string;
        contactPhone?: string;
        businessCategory?: string;
        businessSubcategory?: string;
        primaryProducts?: any;
        secondaryProducts?: any;
        businessDescription?: string;
        address?: string;
        city?: string;
        state?: string;
        country?: string;
        postalCode?: string;
        latitude?: number;
        longitude?: number;
        foundedYear?: number;
        employeeCount?: string;
        annualRevenue?: string;
        businessHours?: any;
        website?: string;
        socialMedia?: any;
        kraPin?: string;
        vatNumber?: string;
        etimsQrUrl?: string;
        businessLicense?: string;
        taxId?: string;
        currency?: string;
        timezone?: string;
        invoiceFooter?: string;
        logoUrl?: string;
        favicon?: string;
        receiptLogo?: string;
        watermark?: string;
        primaryColor?: string;
        secondaryColor?: string;
        customDomain?: string;
        whiteLabel?: boolean;
        apiKey?: string;
        webhookUrl?: string;
        rateLimit?: number;
        stripeCustomerId?: string;
        ownerName: string;
        ownerEmail: string;
        ownerPassword: string;
        ownerRole?: string;
    }): Promise<any>;
    getAllTenants(): Promise<any[]>;
    getTenantById(tenantId: string): Promise<{
        id: string;
        name: string;
        createdAt: Date;
        updatedAt: Date;
        stripeCustomerId: string | null;
        businessType: string;
        contactEmail: string;
        contactPhone: string | null;
        businessCategory: string | null;
        businessSubcategory: string | null;
        primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        businessDescription: string | null;
        address: string | null;
        city: string | null;
        state: string | null;
        country: string | null;
        postalCode: string | null;
        latitude: number | null;
        longitude: number | null;
        foundedYear: number | null;
        employeeCount: string | null;
        annualRevenue: string | null;
        businessHours: import("@prisma/client/runtime/library").JsonValue | null;
        website: string | null;
        socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
        kraPin: string | null;
        vatNumber: string | null;
        etimsQrUrl: string | null;
        businessLicense: string | null;
        taxId: string | null;
        currency: string | null;
        timezone: string | null;
        invoiceFooter: string | null;
        credits: number | null;
        logoUrl: string | null;
        loginLogoUrl: string | null;
        favicon: string | null;
        receiptLogo: string | null;
        watermark: string | null;
        dashboardLogoUrl: string | null;
        emailLogoUrl: string | null;
        mobileLogoUrl: string | null;
        logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
        primaryColor: string | null;
        secondaryColor: string | null;
        customDomain: string | null;
        whiteLabel: boolean;
        apiKey: string | null;
        webhookUrl: string | null;
        rateLimit: number | null;
        customIntegrations: boolean;
        ssoEnabled: boolean;
        auditLogsEnabled: boolean;
        backupRestore: boolean;
    } | null>;
    getTenant(tenantId: string): Promise<{
        id: string;
        name: string;
        createdAt: Date;
        updatedAt: Date;
        stripeCustomerId: string | null;
        businessType: string;
        contactEmail: string;
        contactPhone: string | null;
        businessCategory: string | null;
        businessSubcategory: string | null;
        primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        businessDescription: string | null;
        address: string | null;
        city: string | null;
        state: string | null;
        country: string | null;
        postalCode: string | null;
        latitude: number | null;
        longitude: number | null;
        foundedYear: number | null;
        employeeCount: string | null;
        annualRevenue: string | null;
        businessHours: import("@prisma/client/runtime/library").JsonValue | null;
        website: string | null;
        socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
        kraPin: string | null;
        vatNumber: string | null;
        etimsQrUrl: string | null;
        businessLicense: string | null;
        taxId: string | null;
        currency: string | null;
        timezone: string | null;
        invoiceFooter: string | null;
        credits: number | null;
        logoUrl: string | null;
        loginLogoUrl: string | null;
        favicon: string | null;
        receiptLogo: string | null;
        watermark: string | null;
        dashboardLogoUrl: string | null;
        emailLogoUrl: string | null;
        mobileLogoUrl: string | null;
        logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
        primaryColor: string | null;
        secondaryColor: string | null;
        customDomain: string | null;
        whiteLabel: boolean;
        apiKey: string | null;
        webhookUrl: string | null;
        rateLimit: number | null;
        customIntegrations: boolean;
        ssoEnabled: boolean;
        auditLogsEnabled: boolean;
        backupRestore: boolean;
    } | null>;
    updateTenant(tenantId: string, dto: any): Promise<{
        id: string;
        name: string;
        createdAt: Date;
        updatedAt: Date;
        stripeCustomerId: string | null;
        businessType: string;
        contactEmail: string;
        contactPhone: string | null;
        businessCategory: string | null;
        businessSubcategory: string | null;
        primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        businessDescription: string | null;
        address: string | null;
        city: string | null;
        state: string | null;
        country: string | null;
        postalCode: string | null;
        latitude: number | null;
        longitude: number | null;
        foundedYear: number | null;
        employeeCount: string | null;
        annualRevenue: string | null;
        businessHours: import("@prisma/client/runtime/library").JsonValue | null;
        website: string | null;
        socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
        kraPin: string | null;
        vatNumber: string | null;
        etimsQrUrl: string | null;
        businessLicense: string | null;
        taxId: string | null;
        currency: string | null;
        timezone: string | null;
        invoiceFooter: string | null;
        credits: number | null;
        logoUrl: string | null;
        loginLogoUrl: string | null;
        favicon: string | null;
        receiptLogo: string | null;
        watermark: string | null;
        dashboardLogoUrl: string | null;
        emailLogoUrl: string | null;
        mobileLogoUrl: string | null;
        logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
        primaryColor: string | null;
        secondaryColor: string | null;
        customDomain: string | null;
        whiteLabel: boolean;
        apiKey: string | null;
        webhookUrl: string | null;
        rateLimit: number | null;
        customIntegrations: boolean;
        ssoEnabled: boolean;
        auditLogsEnabled: boolean;
        backupRestore: boolean;
    }>;
    createOwnerUser(data: {
        name: string;
        email: string;
        password: string;
        tenantId: string;
        role?: string;
    }): Promise<{
        id: string;
        email: string;
        password: string;
        name: string;
        isSuperadmin: boolean;
        resetPasswordToken: string | null;
        resetPasswordExpires: Date | null;
        notificationPreferences: import("@prisma/client/runtime/library").JsonValue | null;
        language: string | null;
        region: string | null;
        createdAt: Date;
        updatedAt: Date;
        tenantId: string | null;
    }>;
}
