import { RegistrationDto } from './dto/registration.dto';
import { TenantService } from './tenant.service';
import { UserService } from '../user/user.service';
import { LogoService } from './logo.service';
export declare class TenantController {
    private readonly tenantService;
    private readonly userService;
    private readonly logoService;
    private readonly logger;
    private readonly recaptchaSecretKey;
    constructor(tenantService: TenantService, userService: UserService, logoService: LogoService);
    private validateRecaptcha;
    getMyTenant(req: any): Promise<{
        id: string;
        name: string;
        businessType: string;
        contactEmail: string;
        contactPhone: string | null;
        createdAt: Date;
        updatedAt: Date;
        address: string | null;
        currency: string | null;
        logoUrl: string | null;
        timezone: string | null;
        vatNumber: string | null;
        city: string | null;
        country: string | null;
        taxId: string | null;
        website: string | null;
        annualRevenue: string | null;
        apiKey: string | null;
        backupRestore: boolean;
        businessCategory: string | null;
        businessDescription: string | null;
        businessHours: import("@prisma/client/runtime/library").JsonValue | null;
        businessLicense: string | null;
        businessSubcategory: string | null;
        customDomain: string | null;
        customIntegrations: boolean;
        employeeCount: string | null;
        etimsQrUrl: string | null;
        favicon: string | null;
        foundedYear: number | null;
        invoiceFooter: string | null;
        kraPin: string | null;
        latitude: number | null;
        longitude: number | null;
        postalCode: string | null;
        primaryColor: string | null;
        primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        rateLimit: number | null;
        receiptLogo: string | null;
        secondaryColor: string | null;
        secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
        ssoEnabled: boolean;
        state: string | null;
        stripeCustomerId: string | null;
        watermark: string | null;
        webhookUrl: string | null;
        whiteLabel: boolean;
        dashboardLogoUrl: string | null;
        emailLogoUrl: string | null;
        loginLogoUrl: string | null;
        logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
        pdfTemplate: import("@prisma/client/runtime/library").JsonValue | null;
        mobileLogoUrl: string | null;
        auditLogsEnabled: boolean;
        credits: number | null;
    } | null>;
    updateMyTenant(req: any, dto: any): Promise<{
        id: string;
        name: string;
        businessType: string;
        contactEmail: string;
        contactPhone: string | null;
        createdAt: Date;
        updatedAt: Date;
        address: string | null;
        currency: string | null;
        logoUrl: string | null;
        timezone: string | null;
        vatNumber: string | null;
        city: string | null;
        country: string | null;
        taxId: string | null;
        website: string | null;
        annualRevenue: string | null;
        apiKey: string | null;
        backupRestore: boolean;
        businessCategory: string | null;
        businessDescription: string | null;
        businessHours: import("@prisma/client/runtime/library").JsonValue | null;
        businessLicense: string | null;
        businessSubcategory: string | null;
        customDomain: string | null;
        customIntegrations: boolean;
        employeeCount: string | null;
        etimsQrUrl: string | null;
        favicon: string | null;
        foundedYear: number | null;
        invoiceFooter: string | null;
        kraPin: string | null;
        latitude: number | null;
        longitude: number | null;
        postalCode: string | null;
        primaryColor: string | null;
        primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        rateLimit: number | null;
        receiptLogo: string | null;
        secondaryColor: string | null;
        secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
        ssoEnabled: boolean;
        state: string | null;
        stripeCustomerId: string | null;
        watermark: string | null;
        webhookUrl: string | null;
        whiteLabel: boolean;
        dashboardLogoUrl: string | null;
        emailLogoUrl: string | null;
        loginLogoUrl: string | null;
        logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
        pdfTemplate: import("@prisma/client/runtime/library").JsonValue | null;
        mobileLogoUrl: string | null;
        auditLogsEnabled: boolean;
        credits: number | null;
    }>;
    uploadLogo(req: any, file: Express.Multer.File, body: any): Promise<{
        logoUrl: string;
        type: any;
    }>;
    getLogoCompliance(req: any): Promise<{
        compliant: boolean;
        missing: string[];
        recommendations: string[];
    }>;
    getLogoStatistics(req: any): Promise<{
        totalLogos: number;
        requiredLogos: number;
        optionalLogos: number;
        complianceScore: number;
    }>;
    updateBranding(req: any, dto: any): Promise<{
        id: string;
        name: string;
        businessType: string;
        contactEmail: string;
        contactPhone: string | null;
        createdAt: Date;
        updatedAt: Date;
        address: string | null;
        currency: string | null;
        logoUrl: string | null;
        timezone: string | null;
        vatNumber: string | null;
        city: string | null;
        country: string | null;
        taxId: string | null;
        website: string | null;
        annualRevenue: string | null;
        apiKey: string | null;
        backupRestore: boolean;
        businessCategory: string | null;
        businessDescription: string | null;
        businessHours: import("@prisma/client/runtime/library").JsonValue | null;
        businessLicense: string | null;
        businessSubcategory: string | null;
        customDomain: string | null;
        customIntegrations: boolean;
        employeeCount: string | null;
        etimsQrUrl: string | null;
        favicon: string | null;
        foundedYear: number | null;
        invoiceFooter: string | null;
        kraPin: string | null;
        latitude: number | null;
        longitude: number | null;
        postalCode: string | null;
        primaryColor: string | null;
        primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        rateLimit: number | null;
        receiptLogo: string | null;
        secondaryColor: string | null;
        secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
        ssoEnabled: boolean;
        state: string | null;
        stripeCustomerId: string | null;
        watermark: string | null;
        webhookUrl: string | null;
        whiteLabel: boolean;
        dashboardLogoUrl: string | null;
        emailLogoUrl: string | null;
        loginLogoUrl: string | null;
        logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
        pdfTemplate: import("@prisma/client/runtime/library").JsonValue | null;
        mobileLogoUrl: string | null;
        auditLogsEnabled: boolean;
        credits: number | null;
    }>;
    getApiSettings(req: any): Promise<{
        apiKey: string | null;
        webhookUrl: string | null;
        rateLimit: number;
        customIntegrations: boolean;
    }>;
    updateApiSettings(req: any, apiSettings: any): Promise<{
        id: string;
        name: string;
        businessType: string;
        contactEmail: string;
        contactPhone: string | null;
        createdAt: Date;
        updatedAt: Date;
        address: string | null;
        currency: string | null;
        logoUrl: string | null;
        timezone: string | null;
        vatNumber: string | null;
        city: string | null;
        country: string | null;
        taxId: string | null;
        website: string | null;
        annualRevenue: string | null;
        apiKey: string | null;
        backupRestore: boolean;
        businessCategory: string | null;
        businessDescription: string | null;
        businessHours: import("@prisma/client/runtime/library").JsonValue | null;
        businessLicense: string | null;
        businessSubcategory: string | null;
        customDomain: string | null;
        customIntegrations: boolean;
        employeeCount: string | null;
        etimsQrUrl: string | null;
        favicon: string | null;
        foundedYear: number | null;
        invoiceFooter: string | null;
        kraPin: string | null;
        latitude: number | null;
        longitude: number | null;
        postalCode: string | null;
        primaryColor: string | null;
        primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        rateLimit: number | null;
        receiptLogo: string | null;
        secondaryColor: string | null;
        secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
        ssoEnabled: boolean;
        state: string | null;
        stripeCustomerId: string | null;
        watermark: string | null;
        webhookUrl: string | null;
        whiteLabel: boolean;
        dashboardLogoUrl: string | null;
        emailLogoUrl: string | null;
        loginLogoUrl: string | null;
        logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
        pdfTemplate: import("@prisma/client/runtime/library").JsonValue | null;
        mobileLogoUrl: string | null;
        auditLogsEnabled: boolean;
        credits: number | null;
    }>;
    updatePdfTemplate(req: any, pdfTemplate: any): Promise<{
        id: string;
        name: string;
        businessType: string;
        contactEmail: string;
        contactPhone: string | null;
        createdAt: Date;
        updatedAt: Date;
        address: string | null;
        currency: string | null;
        logoUrl: string | null;
        timezone: string | null;
        vatNumber: string | null;
        city: string | null;
        country: string | null;
        taxId: string | null;
        website: string | null;
        annualRevenue: string | null;
        apiKey: string | null;
        backupRestore: boolean;
        businessCategory: string | null;
        businessDescription: string | null;
        businessHours: import("@prisma/client/runtime/library").JsonValue | null;
        businessLicense: string | null;
        businessSubcategory: string | null;
        customDomain: string | null;
        customIntegrations: boolean;
        employeeCount: string | null;
        etimsQrUrl: string | null;
        favicon: string | null;
        foundedYear: number | null;
        invoiceFooter: string | null;
        kraPin: string | null;
        latitude: number | null;
        longitude: number | null;
        postalCode: string | null;
        primaryColor: string | null;
        primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        rateLimit: number | null;
        receiptLogo: string | null;
        secondaryColor: string | null;
        secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
        ssoEnabled: boolean;
        state: string | null;
        stripeCustomerId: string | null;
        watermark: string | null;
        webhookUrl: string | null;
        whiteLabel: boolean;
        dashboardLogoUrl: string | null;
        emailLogoUrl: string | null;
        loginLogoUrl: string | null;
        logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
        pdfTemplate: import("@prisma/client/runtime/library").JsonValue | null;
        mobileLogoUrl: string | null;
        auditLogsEnabled: boolean;
        credits: number | null;
    }>;
    generateApiKey(req: any): Promise<{
        apiKey: string;
    }>;
    createTenant(req: any, createTenantDto: RegistrationDto): Promise<{
        success: boolean;
        data: {
            tenant: any;
            branch: {
                id: string;
                name: string;
                manager: string | null;
                createdAt: Date;
                updatedAt: Date;
                address: string | null;
                city: string | null;
                country: string | null;
                postalCode: string | null;
                state: string | null;
                tenantId: string;
                email: string | null;
                customField: string | null;
                isMainBranch: boolean;
                logo: string | null;
                openingHours: string | null;
                phone: string | null;
                status: string | null;
                street: string | null;
            };
            user: {
                id: any;
                name: any;
                email: any;
            };
        };
    }>;
}
