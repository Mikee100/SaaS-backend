import { TenantService } from './tenant.service';
import { UserService } from '../user/user.service';
import { LogoService } from './logo.service';
export declare class TenantController {
    private readonly tenantService;
    private readonly userService;
    private readonly logoService;
    private readonly logger;
    constructor(tenantService: TenantService, userService: UserService, logoService: LogoService);
    getMyTenant(req: any): Promise<{
        id: string;
        name: string;
        createdAt: Date;
        updatedAt: Date;
        stripeCustomerId: string | null;
        businessType: string;
        contactEmail: string;
        contactPhone: string | null;
        address: string | null;
        currency: string | null;
        invoiceFooter: string | null;
        logoUrl: string | null;
        timezone: string | null;
        etimsQrUrl: string | null;
        kraPin: string | null;
        vatNumber: string | null;
        annualRevenue: string | null;
        apiKey: string | null;
        auditLogsEnabled: boolean;
        backupRestore: boolean;
        businessCategory: string | null;
        businessDescription: string | null;
        businessHours: import("@prisma/client/runtime/library").JsonValue | null;
        businessLicense: string | null;
        businessSubcategory: string | null;
        city: string | null;
        country: string | null;
        credits: number | null;
        customDomain: string | null;
        customIntegrations: boolean;
        dashboardLogoUrl: string | null;
        emailLogoUrl: string | null;
        employeeCount: string | null;
        favicon: string | null;
        foundedYear: number | null;
        latitude: number | null;
        loginLogoUrl: string | null;
        logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
        longitude: number | null;
        mobileLogoUrl: string | null;
        postalCode: string | null;
        primaryColor: string | null;
        primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        rateLimit: number | null;
        receiptLogo: string | null;
        secondaryColor: string | null;
        secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
        ssoEnabled: boolean;
        state: string | null;
        taxId: string | null;
        watermark: string | null;
        webhookUrl: string | null;
        website: string | null;
        whiteLabel: boolean;
    } | null>;
    updateMyTenant(req: any, dto: any): Promise<{
        id: string;
        name: string;
        createdAt: Date;
        updatedAt: Date;
        stripeCustomerId: string | null;
        businessType: string;
        contactEmail: string;
        contactPhone: string | null;
        address: string | null;
        currency: string | null;
        invoiceFooter: string | null;
        logoUrl: string | null;
        timezone: string | null;
        etimsQrUrl: string | null;
        kraPin: string | null;
        vatNumber: string | null;
        annualRevenue: string | null;
        apiKey: string | null;
        auditLogsEnabled: boolean;
        backupRestore: boolean;
        businessCategory: string | null;
        businessDescription: string | null;
        businessHours: import("@prisma/client/runtime/library").JsonValue | null;
        businessLicense: string | null;
        businessSubcategory: string | null;
        city: string | null;
        country: string | null;
        credits: number | null;
        customDomain: string | null;
        customIntegrations: boolean;
        dashboardLogoUrl: string | null;
        emailLogoUrl: string | null;
        employeeCount: string | null;
        favicon: string | null;
        foundedYear: number | null;
        latitude: number | null;
        loginLogoUrl: string | null;
        logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
        longitude: number | null;
        mobileLogoUrl: string | null;
        postalCode: string | null;
        primaryColor: string | null;
        primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        rateLimit: number | null;
        receiptLogo: string | null;
        secondaryColor: string | null;
        secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
        ssoEnabled: boolean;
        state: string | null;
        taxId: string | null;
        watermark: string | null;
        webhookUrl: string | null;
        website: string | null;
        whiteLabel: boolean;
    }>;
    uploadLogo(req: any, file: Express.Multer.File, body: any): Promise<{
        logoUrl: string;
        type: any;
    }>;
    getLogoCompliance(req: any): Promise<{
        compliant: boolean;
        missing: string[];
        recommendations: string[];
    }>;
    getLogoStatistics(req: any): Promise<{
        totalLogos: number;
        requiredLogos: number;
        optionalLogos: number;
        complianceScore: number;
    }>;
    updateBranding(req: any, dto: any): Promise<{
        id: string;
        name: string;
        createdAt: Date;
        updatedAt: Date;
        stripeCustomerId: string | null;
        businessType: string;
        contactEmail: string;
        contactPhone: string | null;
        address: string | null;
        currency: string | null;
        invoiceFooter: string | null;
        logoUrl: string | null;
        timezone: string | null;
        etimsQrUrl: string | null;
        kraPin: string | null;
        vatNumber: string | null;
        annualRevenue: string | null;
        apiKey: string | null;
        auditLogsEnabled: boolean;
        backupRestore: boolean;
        businessCategory: string | null;
        businessDescription: string | null;
        businessHours: import("@prisma/client/runtime/library").JsonValue | null;
        businessLicense: string | null;
        businessSubcategory: string | null;
        city: string | null;
        country: string | null;
        credits: number | null;
        customDomain: string | null;
        customIntegrations: boolean;
        dashboardLogoUrl: string | null;
        emailLogoUrl: string | null;
        employeeCount: string | null;
        favicon: string | null;
        foundedYear: number | null;
        latitude: number | null;
        loginLogoUrl: string | null;
        logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
        longitude: number | null;
        mobileLogoUrl: string | null;
        postalCode: string | null;
        primaryColor: string | null;
        primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        rateLimit: number | null;
        receiptLogo: string | null;
        secondaryColor: string | null;
        secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
        ssoEnabled: boolean;
        state: string | null;
        taxId: string | null;
        watermark: string | null;
        webhookUrl: string | null;
        website: string | null;
        whiteLabel: boolean;
    }>;
    getApiSettings(req: any): Promise<{
        apiKey: string | null;
        webhookUrl: string | null;
        rateLimit: number;
        customIntegrations: boolean;
    }>;
    updateApiSettings(req: any, apiSettings: any): Promise<{
        id: string;
        name: string;
        createdAt: Date;
        updatedAt: Date;
        stripeCustomerId: string | null;
        businessType: string;
        contactEmail: string;
        contactPhone: string | null;
        address: string | null;
        currency: string | null;
        invoiceFooter: string | null;
        logoUrl: string | null;
        timezone: string | null;
        etimsQrUrl: string | null;
        kraPin: string | null;
        vatNumber: string | null;
        annualRevenue: string | null;
        apiKey: string | null;
        auditLogsEnabled: boolean;
        backupRestore: boolean;
        businessCategory: string | null;
        businessDescription: string | null;
        businessHours: import("@prisma/client/runtime/library").JsonValue | null;
        businessLicense: string | null;
        businessSubcategory: string | null;
        city: string | null;
        country: string | null;
        credits: number | null;
        customDomain: string | null;
        customIntegrations: boolean;
        dashboardLogoUrl: string | null;
        emailLogoUrl: string | null;
        employeeCount: string | null;
        favicon: string | null;
        foundedYear: number | null;
        latitude: number | null;
        loginLogoUrl: string | null;
        logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
        longitude: number | null;
        mobileLogoUrl: string | null;
        postalCode: string | null;
        primaryColor: string | null;
        primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        rateLimit: number | null;
        receiptLogo: string | null;
        secondaryColor: string | null;
        secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
        socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
        ssoEnabled: boolean;
        state: string | null;
        taxId: string | null;
        watermark: string | null;
        webhookUrl: string | null;
        website: string | null;
        whiteLabel: boolean;
    }>;
    generateApiKey(req: any): Promise<{
        apiKey: string;
    }>;
    createTenant(createTenantDto: any): Promise<{
        tenant: any;
        ownerUser: any;
    } | {
        tenant: any;
        ownerUser?: undefined;
    }>;
}
