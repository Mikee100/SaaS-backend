import { PrismaService } from '../prisma.service';
import { AuditLogService } from '../audit-log.service';
export declare class UserService {
    private prisma;
    private auditLogService;
    updateUserPermissions(userId: string, permissions: string[], tenantId: string, actorUserId?: string, ip?: string): Promise<{
        success: boolean;
    }>;
    findById(id: string, options?: {
        include?: any;
    }): Promise<({
        [x: string]: {
            id: string;
            createdAt: Date;
            userId: string | null;
            action: string;
            details: import("@prisma/client/runtime/library").JsonValue | null;
            ip: string | null;
        }[] | ({
            id: string;
            tenantId: string;
            roleId: string;
            userId: string;
        } | {
            id: string;
            tenantId: string;
            roleId: string;
            userId: string;
        })[] | ({
            id: string;
            tenantId: string;
            roleId: string;
            userId: string;
            branchId: string;
        } | {
            id: string;
            tenantId: string;
            roleId: string;
            userId: string;
            branchId: string;
        })[] | ({
            id: string;
            createdAt: Date;
            userId: string | null;
            action: string;
            details: import("@prisma/client/runtime/library").JsonValue | null;
            ip: string | null;
        } | {
            id: string;
            createdAt: Date;
            userId: string | null;
            action: string;
            details: import("@prisma/client/runtime/library").JsonValue | null;
            ip: string | null;
        })[] | ({
            id: string;
            createdAt: Date;
            tenantId: string;
            updatedAt: Date;
            userId: string | null;
            status: string;
            phoneNumber: string;
            amount: number;
            mpesaReceipt: string | null;
            merchantRequestId: string | null;
            responseCode: string | null;
            responseDesc: string | null;
            message: string | null;
            saleData: import("@prisma/client/runtime/library").JsonValue | null;
            billRefNumber: string | null;
            businessShortCode: string | null;
            checkoutRequestID: string | null;
            invoiceNumber: string | null;
            orgAccountBalance: string | null;
            saleId: string | null;
            thirdPartyTransID: string | null;
            transactionId: string | null;
            transactionTime: Date | null;
            transactionType: string | null;
        } | {
            id: string;
            createdAt: Date;
            tenantId: string;
            updatedAt: Date;
            userId: string | null;
            status: string;
            phoneNumber: string;
            amount: number;
            mpesaReceipt: string | null;
            merchantRequestId: string | null;
            responseCode: string | null;
            responseDesc: string | null;
            message: string | null;
            saleData: import("@prisma/client/runtime/library").JsonValue | null;
            billRefNumber: string | null;
            businessShortCode: string | null;
            checkoutRequestID: string | null;
            invoiceNumber: string | null;
            orgAccountBalance: string | null;
            saleId: string | null;
            thirdPartyTransID: string | null;
            transactionId: string | null;
            transactionTime: Date | null;
            transactionType: string | null;
        })[] | ({
            id: string;
            tenantId: string;
            permission: string;
            userId: string;
            grantedBy: string | null;
            grantedAt: Date;
        } | {
            id: string;
            tenantId: string;
            permission: string;
            userId: string;
            grantedBy: string | null;
            grantedAt: Date;
        })[] | ({
            id: string;
            createdAt: Date;
            tenantId: string;
            userId: string;
            branchId: string | null;
            total: number;
            paymentType: string;
            customerName: string | null;
            customerPhone: string | null;
            mpesaTransactionId: string | null;
            idempotencyKey: string | null;
            vatAmount: number | null;
        } | {
            id: string;
            createdAt: Date;
            tenantId: string;
            userId: string;
            branchId: string | null;
            total: number;
            paymentType: string;
            customerName: string | null;
            customerPhone: string | null;
            mpesaTransactionId: string | null;
            idempotencyKey: string | null;
            vatAmount: number | null;
        })[] | ({
            id: string;
            createdAt: Date;
            tenantId: string;
            data: import("@prisma/client/runtime/library").JsonValue | null;
            userId: string | null;
            message: string;
            type: string;
            isRead: boolean;
            title: string;
            readAt: Date | null;
        } | {
            id: string;
            createdAt: Date;
            tenantId: string;
            data: import("@prisma/client/runtime/library").JsonValue | null;
            userId: string | null;
            message: string;
            type: string;
            isRead: boolean;
            title: string;
            readAt: Date | null;
        })[] | ({
            id: string;
            tenantId: string;
            userId: string;
            stripeCustomerId: string;
            status: string;
            stripeSubscriptionId: string;
            planId: string;
            currentPeriodStart: Date;
            currentPeriodEnd: Date;
            cancelAtPeriodEnd: boolean;
            canceledAt: Date | null;
            stripePriceId: string;
            stripeCurrentPeriodEnd: Date;
            trialEnd: Date | null;
            trialStart: Date | null;
        } | {
            id: string;
            tenantId: string;
            userId: string;
            stripeCustomerId: string;
            status: string;
            stripeSubscriptionId: string;
            planId: string;
            currentPeriodStart: Date;
            currentPeriodEnd: Date;
            cancelAtPeriodEnd: boolean;
            canceledAt: Date | null;
            stripePriceId: string;
            stripeCurrentPeriodEnd: Date;
            trialEnd: Date | null;
            trialStart: Date | null;
        })[] | {
            id: string;
            tenantId: string;
            roleId: string;
            userId: string;
        }[] | {
            id: string;
            tenantId: string;
            roleId: string;
            userId: string;
            branchId: string;
        }[] | {
            id: string;
            createdAt: Date;
            tenantId: string;
            updatedAt: Date;
            userId: string | null;
            status: string;
            phoneNumber: string;
            amount: number;
            mpesaReceipt: string | null;
            merchantRequestId: string | null;
            responseCode: string | null;
            responseDesc: string | null;
            message: string | null;
            saleData: import("@prisma/client/runtime/library").JsonValue | null;
            billRefNumber: string | null;
            businessShortCode: string | null;
            checkoutRequestID: string | null;
            invoiceNumber: string | null;
            orgAccountBalance: string | null;
            saleId: string | null;
            thirdPartyTransID: string | null;
            transactionId: string | null;
            transactionTime: Date | null;
            transactionType: string | null;
        }[] | {
            id: string;
            tenantId: string;
            permission: string;
            userId: string;
            grantedBy: string | null;
            grantedAt: Date;
        }[] | {
            id: string;
            createdAt: Date;
            tenantId: string;
            userId: string;
            branchId: string | null;
            total: number;
            paymentType: string;
            customerName: string | null;
            customerPhone: string | null;
            mpesaTransactionId: string | null;
            idempotencyKey: string | null;
            vatAmount: number | null;
        }[] | {
            id: string;
            createdAt: Date;
            tenantId: string;
            data: import("@prisma/client/runtime/library").JsonValue | null;
            userId: string | null;
            message: string;
            type: string;
            isRead: boolean;
            title: string;
            readAt: Date | null;
        }[] | {
            id: string;
            tenantId: string;
            userId: string;
            stripeCustomerId: string;
            status: string;
            stripeSubscriptionId: string;
            planId: string;
            currentPeriodStart: Date;
            currentPeriodEnd: Date;
            cancelAtPeriodEnd: boolean;
            canceledAt: Date | null;
            stripePriceId: string;
            stripeCurrentPeriodEnd: Date;
            trialEnd: Date | null;
            trialStart: Date | null;
        }[];
        [x: number]: never;
        [x: symbol]: never;
    } & {
        id: string;
        name: string;
        createdAt: Date;
        tenantId: string | null;
        updatedAt: Date;
        email: string;
        password: string;
        resetPasswordExpires: Date | null;
        resetPasswordToken: string | null;
        language: string | null;
        notificationPreferences: import("@prisma/client/runtime/library").JsonValue | null;
        region: string | null;
        isSuperadmin: boolean;
        branchId: string | null;
    }) | null>;
    private readonly logger;
    constructor(prisma: PrismaService, auditLogService: AuditLogService);
    createUser(data: {
        email: string;
        password: string;
        name: string;
        role: string;
        tenantId: string;
        branchId?: string;
    }, actorUserId?: string, ip?: string, prismaClient?: any): Promise<any>;
    findByEmail(email: string, include?: any): Promise<({
        [x: string]: {
            id: string;
            createdAt: Date;
            userId: string | null;
            action: string;
            details: import("@prisma/client/runtime/library").JsonValue | null;
            ip: string | null;
        }[] | ({
            id: string;
            tenantId: string;
            roleId: string;
            userId: string;
        } | {
            id: string;
            tenantId: string;
            roleId: string;
            userId: string;
        })[] | ({
            id: string;
            tenantId: string;
            roleId: string;
            userId: string;
            branchId: string;
        } | {
            id: string;
            tenantId: string;
            roleId: string;
            userId: string;
            branchId: string;
        })[] | ({
            id: string;
            createdAt: Date;
            userId: string | null;
            action: string;
            details: import("@prisma/client/runtime/library").JsonValue | null;
            ip: string | null;
        } | {
            id: string;
            createdAt: Date;
            userId: string | null;
            action: string;
            details: import("@prisma/client/runtime/library").JsonValue | null;
            ip: string | null;
        })[] | ({
            id: string;
            createdAt: Date;
            tenantId: string;
            updatedAt: Date;
            userId: string | null;
            status: string;
            phoneNumber: string;
            amount: number;
            mpesaReceipt: string | null;
            merchantRequestId: string | null;
            responseCode: string | null;
            responseDesc: string | null;
            message: string | null;
            saleData: import("@prisma/client/runtime/library").JsonValue | null;
            billRefNumber: string | null;
            businessShortCode: string | null;
            checkoutRequestID: string | null;
            invoiceNumber: string | null;
            orgAccountBalance: string | null;
            saleId: string | null;
            thirdPartyTransID: string | null;
            transactionId: string | null;
            transactionTime: Date | null;
            transactionType: string | null;
        } | {
            id: string;
            createdAt: Date;
            tenantId: string;
            updatedAt: Date;
            userId: string | null;
            status: string;
            phoneNumber: string;
            amount: number;
            mpesaReceipt: string | null;
            merchantRequestId: string | null;
            responseCode: string | null;
            responseDesc: string | null;
            message: string | null;
            saleData: import("@prisma/client/runtime/library").JsonValue | null;
            billRefNumber: string | null;
            businessShortCode: string | null;
            checkoutRequestID: string | null;
            invoiceNumber: string | null;
            orgAccountBalance: string | null;
            saleId: string | null;
            thirdPartyTransID: string | null;
            transactionId: string | null;
            transactionTime: Date | null;
            transactionType: string | null;
        })[] | ({
            id: string;
            tenantId: string;
            permission: string;
            userId: string;
            grantedBy: string | null;
            grantedAt: Date;
        } | {
            id: string;
            tenantId: string;
            permission: string;
            userId: string;
            grantedBy: string | null;
            grantedAt: Date;
        })[] | ({
            id: string;
            createdAt: Date;
            tenantId: string;
            userId: string;
            branchId: string | null;
            total: number;
            paymentType: string;
            customerName: string | null;
            customerPhone: string | null;
            mpesaTransactionId: string | null;
            idempotencyKey: string | null;
            vatAmount: number | null;
        } | {
            id: string;
            createdAt: Date;
            tenantId: string;
            userId: string;
            branchId: string | null;
            total: number;
            paymentType: string;
            customerName: string | null;
            customerPhone: string | null;
            mpesaTransactionId: string | null;
            idempotencyKey: string | null;
            vatAmount: number | null;
        })[] | ({
            id: string;
            createdAt: Date;
            tenantId: string;
            data: import("@prisma/client/runtime/library").JsonValue | null;
            userId: string | null;
            message: string;
            type: string;
            isRead: boolean;
            title: string;
            readAt: Date | null;
        } | {
            id: string;
            createdAt: Date;
            tenantId: string;
            data: import("@prisma/client/runtime/library").JsonValue | null;
            userId: string | null;
            message: string;
            type: string;
            isRead: boolean;
            title: string;
            readAt: Date | null;
        })[] | ({
            id: string;
            tenantId: string;
            userId: string;
            stripeCustomerId: string;
            status: string;
            stripeSubscriptionId: string;
            planId: string;
            currentPeriodStart: Date;
            currentPeriodEnd: Date;
            cancelAtPeriodEnd: boolean;
            canceledAt: Date | null;
            stripePriceId: string;
            stripeCurrentPeriodEnd: Date;
            trialEnd: Date | null;
            trialStart: Date | null;
        } | {
            id: string;
            tenantId: string;
            userId: string;
            stripeCustomerId: string;
            status: string;
            stripeSubscriptionId: string;
            planId: string;
            currentPeriodStart: Date;
            currentPeriodEnd: Date;
            cancelAtPeriodEnd: boolean;
            canceledAt: Date | null;
            stripePriceId: string;
            stripeCurrentPeriodEnd: Date;
            trialEnd: Date | null;
            trialStart: Date | null;
        })[] | {
            id: string;
            tenantId: string;
            roleId: string;
            userId: string;
        }[] | {
            id: string;
            tenantId: string;
            roleId: string;
            userId: string;
            branchId: string;
        }[] | {
            id: string;
            createdAt: Date;
            tenantId: string;
            updatedAt: Date;
            userId: string | null;
            status: string;
            phoneNumber: string;
            amount: number;
            mpesaReceipt: string | null;
            merchantRequestId: string | null;
            responseCode: string | null;
            responseDesc: string | null;
            message: string | null;
            saleData: import("@prisma/client/runtime/library").JsonValue | null;
            billRefNumber: string | null;
            businessShortCode: string | null;
            checkoutRequestID: string | null;
            invoiceNumber: string | null;
            orgAccountBalance: string | null;
            saleId: string | null;
            thirdPartyTransID: string | null;
            transactionId: string | null;
            transactionTime: Date | null;
            transactionType: string | null;
        }[] | {
            id: string;
            tenantId: string;
            permission: string;
            userId: string;
            grantedBy: string | null;
            grantedAt: Date;
        }[] | {
            id: string;
            createdAt: Date;
            tenantId: string;
            userId: string;
            branchId: string | null;
            total: number;
            paymentType: string;
            customerName: string | null;
            customerPhone: string | null;
            mpesaTransactionId: string | null;
            idempotencyKey: string | null;
            vatAmount: number | null;
        }[] | {
            id: string;
            createdAt: Date;
            tenantId: string;
            data: import("@prisma/client/runtime/library").JsonValue | null;
            userId: string | null;
            message: string;
            type: string;
            isRead: boolean;
            title: string;
            readAt: Date | null;
        }[] | {
            id: string;
            tenantId: string;
            userId: string;
            stripeCustomerId: string;
            status: string;
            stripeSubscriptionId: string;
            planId: string;
            currentPeriodStart: Date;
            currentPeriodEnd: Date;
            cancelAtPeriodEnd: boolean;
            canceledAt: Date | null;
            stripePriceId: string;
            stripeCurrentPeriodEnd: Date;
            trialEnd: Date | null;
            trialStart: Date | null;
        }[];
        [x: number]: never;
        [x: symbol]: never;
    } & {
        id: string;
        name: string;
        createdAt: Date;
        tenantId: string | null;
        updatedAt: Date;
        email: string;
        password: string;
        resetPasswordExpires: Date | null;
        resetPasswordToken: string | null;
        language: string | null;
        notificationPreferences: import("@prisma/client/runtime/library").JsonValue | null;
        region: string | null;
        isSuperadmin: boolean;
        branchId: string | null;
    }) | {
        isActive: boolean;
        id: string;
        name: string;
        tenantId: string | null;
        email: string;
        password: string;
        branchId: string | null;
    } | null>;
    getUserRoles(tenantId: string): Promise<({
        tenant: {
            id: string;
            name: string;
            createdAt: Date;
            updatedAt: Date;
            businessType: string;
            contactEmail: string;
            contactPhone: string | null;
            address: string | null;
            currency: string | null;
            logoUrl: string | null;
            timezone: string | null;
            vatNumber: string | null;
            city: string | null;
            country: string | null;
            taxId: string | null;
            website: string | null;
            annualRevenue: string | null;
            apiKey: string | null;
            backupRestore: boolean;
            businessCategory: string | null;
            businessDescription: string | null;
            businessHours: import("@prisma/client/runtime/library").JsonValue | null;
            businessLicense: string | null;
            businessSubcategory: string | null;
            customDomain: string | null;
            customIntegrations: boolean;
            employeeCount: string | null;
            etimsQrUrl: string | null;
            favicon: string | null;
            foundedYear: number | null;
            invoiceFooter: string | null;
            kraPin: string | null;
            latitude: number | null;
            longitude: number | null;
            postalCode: string | null;
            primaryColor: string | null;
            primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
            rateLimit: number | null;
            receiptLogo: string | null;
            secondaryColor: string | null;
            secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
            socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
            ssoEnabled: boolean;
            state: string | null;
            stripeCustomerId: string | null;
            watermark: string | null;
            webhookUrl: string | null;
            whiteLabel: boolean;
            dashboardLogoUrl: string | null;
            emailLogoUrl: string | null;
            loginLogoUrl: string | null;
            logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
            mobileLogoUrl: string | null;
            auditLogsEnabled: boolean;
            credits: number | null;
        } | null;
        permissions: {
            id: string;
            roleId: string;
            permissionId: string;
        }[];
    } & {
        id: string;
        name: string;
        description: string | null;
        createdAt: Date;
        tenantId: string | null;
        updatedAt: Date;
    })[]>;
    findAllByTenant(tenantId: string): Promise<({
        userRoles: ({
            role: {
                id: string;
                name: string;
                description: string | null;
                createdAt: Date;
                tenantId: string | null;
                updatedAt: Date;
            };
            tenant: {
                id: string;
                name: string;
                createdAt: Date;
                updatedAt: Date;
                businessType: string;
                contactEmail: string;
                contactPhone: string | null;
                address: string | null;
                currency: string | null;
                logoUrl: string | null;
                timezone: string | null;
                vatNumber: string | null;
                city: string | null;
                country: string | null;
                taxId: string | null;
                website: string | null;
                annualRevenue: string | null;
                apiKey: string | null;
                backupRestore: boolean;
                businessCategory: string | null;
                businessDescription: string | null;
                businessHours: import("@prisma/client/runtime/library").JsonValue | null;
                businessLicense: string | null;
                businessSubcategory: string | null;
                customDomain: string | null;
                customIntegrations: boolean;
                employeeCount: string | null;
                etimsQrUrl: string | null;
                favicon: string | null;
                foundedYear: number | null;
                invoiceFooter: string | null;
                kraPin: string | null;
                latitude: number | null;
                longitude: number | null;
                postalCode: string | null;
                primaryColor: string | null;
                primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
                rateLimit: number | null;
                receiptLogo: string | null;
                secondaryColor: string | null;
                secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
                socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
                ssoEnabled: boolean;
                state: string | null;
                stripeCustomerId: string | null;
                watermark: string | null;
                webhookUrl: string | null;
                whiteLabel: boolean;
                dashboardLogoUrl: string | null;
                emailLogoUrl: string | null;
                loginLogoUrl: string | null;
                logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
                mobileLogoUrl: string | null;
                auditLogsEnabled: boolean;
                credits: number | null;
            };
        } & {
            id: string;
            tenantId: string;
            roleId: string;
            userId: string;
        })[];
    } & {
        id: string;
        name: string;
        createdAt: Date;
        tenantId: string | null;
        updatedAt: Date;
        email: string;
        password: string;
        resetPasswordExpires: Date | null;
        resetPasswordToken: string | null;
        language: string | null;
        notificationPreferences: import("@prisma/client/runtime/library").JsonValue | null;
        region: string | null;
        isSuperadmin: boolean;
        branchId: string | null;
    })[]>;
    findByTenantAndBranch(tenantId: string, branchId: string | null): Promise<({
        userRoles: ({
            role: {
                id: string;
                name: string;
                description: string | null;
                createdAt: Date;
                tenantId: string | null;
                updatedAt: Date;
            };
        } & {
            id: string;
            tenantId: string;
            roleId: string;
            userId: string;
        })[];
    } & {
        id: string;
        name: string;
        createdAt: Date;
        tenantId: string | null;
        updatedAt: Date;
        email: string;
        password: string;
        resetPasswordExpires: Date | null;
        resetPasswordToken: string | null;
        language: string | null;
        notificationPreferences: import("@prisma/client/runtime/library").JsonValue | null;
        region: string | null;
        isSuperadmin: boolean;
        branchId: string | null;
    })[]>;
    updateUser(id: string, data: {
        name?: string;
        role?: string;
    }, tenantId: string, actorUserId?: string, ip?: string): Promise<any>;
    updateUserByEmail(email: string, data: any): Promise<{
        id: string;
        name: string;
        createdAt: Date;
        tenantId: string | null;
        updatedAt: Date;
        email: string;
        password: string;
        resetPasswordExpires: Date | null;
        resetPasswordToken: string | null;
        language: string | null;
        notificationPreferences: import("@prisma/client/runtime/library").JsonValue | null;
        region: string | null;
        isSuperadmin: boolean;
        branchId: string | null;
    }>;
    updateUserPreferences(userId: string, data: {
        notificationPreferences?: any;
        language?: string;
        region?: string;
        branchId?: string;
    }): Promise<{
        id: string;
        name: string;
        createdAt: Date;
        tenantId: string | null;
        updatedAt: Date;
        email: string;
        password: string;
        resetPasswordExpires: Date | null;
        resetPasswordToken: string | null;
        language: string | null;
        notificationPreferences: import("@prisma/client/runtime/library").JsonValue | null;
        region: string | null;
        isSuperadmin: boolean;
        branchId: string | null;
    }>;
    resetPassword(token: string, newPassword: string): Promise<{
        id: string;
        name: string;
        createdAt: Date;
        tenantId: string | null;
        updatedAt: Date;
        email: string;
        password: string;
        resetPasswordExpires: Date | null;
        resetPasswordToken: string | null;
        language: string | null;
        notificationPreferences: import("@prisma/client/runtime/library").JsonValue | null;
        region: string | null;
        isSuperadmin: boolean;
        branchId: string | null;
    }>;
    getEffectivePermissions(userId: string, tenantId?: string): Promise<Array<{
        name: string;
    }>>;
    getUserById(id: string): Promise<{
        roles: {
            tenant: {
                id: string;
                name: string;
                createdAt: Date;
                updatedAt: Date;
                businessType: string;
                contactEmail: string;
                contactPhone: string | null;
                address: string | null;
                currency: string | null;
                logoUrl: string | null;
                timezone: string | null;
                vatNumber: string | null;
                city: string | null;
                country: string | null;
                taxId: string | null;
                website: string | null;
                annualRevenue: string | null;
                apiKey: string | null;
                backupRestore: boolean;
                businessCategory: string | null;
                businessDescription: string | null;
                businessHours: import("@prisma/client/runtime/library").JsonValue | null;
                businessLicense: string | null;
                businessSubcategory: string | null;
                customDomain: string | null;
                customIntegrations: boolean;
                employeeCount: string | null;
                etimsQrUrl: string | null;
                favicon: string | null;
                foundedYear: number | null;
                invoiceFooter: string | null;
                kraPin: string | null;
                latitude: number | null;
                longitude: number | null;
                postalCode: string | null;
                primaryColor: string | null;
                primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
                rateLimit: number | null;
                receiptLogo: string | null;
                secondaryColor: string | null;
                secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
                socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
                ssoEnabled: boolean;
                state: string | null;
                stripeCustomerId: string | null;
                watermark: string | null;
                webhookUrl: string | null;
                whiteLabel: boolean;
                dashboardLogoUrl: string | null;
                emailLogoUrl: string | null;
                loginLogoUrl: string | null;
                logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
                mobileLogoUrl: string | null;
                auditLogsEnabled: boolean;
                credits: number | null;
            };
            id: string;
            name: string;
            description: string | null;
            createdAt: Date;
            tenantId: string | null;
            updatedAt: Date;
        }[];
        userRoles: {
            role: {
                id: string;
                name: string;
                description: string | null;
                createdAt: Date;
                tenantId: string | null;
                updatedAt: Date;
            };
            tenant: {
                id: string;
                name: string;
                createdAt: Date;
                updatedAt: Date;
                businessType: string;
                contactEmail: string;
                contactPhone: string | null;
                address: string | null;
                currency: string | null;
                logoUrl: string | null;
                timezone: string | null;
                vatNumber: string | null;
                city: string | null;
                country: string | null;
                taxId: string | null;
                website: string | null;
                annualRevenue: string | null;
                apiKey: string | null;
                backupRestore: boolean;
                businessCategory: string | null;
                businessDescription: string | null;
                businessHours: import("@prisma/client/runtime/library").JsonValue | null;
                businessLicense: string | null;
                businessSubcategory: string | null;
                customDomain: string | null;
                customIntegrations: boolean;
                employeeCount: string | null;
                etimsQrUrl: string | null;
                favicon: string | null;
                foundedYear: number | null;
                invoiceFooter: string | null;
                kraPin: string | null;
                latitude: number | null;
                longitude: number | null;
                postalCode: string | null;
                primaryColor: string | null;
                primaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
                rateLimit: number | null;
                receiptLogo: string | null;
                secondaryColor: string | null;
                secondaryProducts: import("@prisma/client/runtime/library").JsonValue | null;
                socialMedia: import("@prisma/client/runtime/library").JsonValue | null;
                ssoEnabled: boolean;
                state: string | null;
                stripeCustomerId: string | null;
                watermark: string | null;
                webhookUrl: string | null;
                whiteLabel: boolean;
                dashboardLogoUrl: string | null;
                emailLogoUrl: string | null;
                loginLogoUrl: string | null;
                logoSettings: import("@prisma/client/runtime/library").JsonValue | null;
                mobileLogoUrl: string | null;
                auditLogsEnabled: boolean;
                credits: number | null;
            };
        }[];
        id: string;
        name: string;
        createdAt: Date;
        tenantId: string | null;
        updatedAt: Date;
        email: string;
        password: string;
        resetPasswordExpires: Date | null;
        resetPasswordToken: string | null;
        language: string | null;
        notificationPreferences: import("@prisma/client/runtime/library").JsonValue | null;
        region: string | null;
        isSuperadmin: boolean;
        branchId: string | null;
    }>;
    deleteUser(id: string, tenantId: string, actorUserId?: string, ip?: string): Promise<any>;
    getAllPermissions(): Promise<{
        name: string;
    }[]>;
}
